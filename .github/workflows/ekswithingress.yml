name: Build, Push to ECR and Deploy Backend to EKS

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: shubham_php_laravel_backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      # Configure AWS credentials via OIDC
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      # Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # Build, tag, and push Docker image
      - name: Build, Tag, and Push Docker Image
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          IMAGE_TAG=${{ github.sha }}
          ECR_REGISTRY=$ACCOUNT_ID.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          echo "Building image: $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG"
          docker build -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG .
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup kubectl
      - uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.1'

      # Configure AWS credentials for kubectl & EKS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      # Update kubeconfig for EKS
      - name: Configure kubectl
        run: aws eks --region ${{ env.AWS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

      # Install NGINX Ingress Controller (if not installed)
      - name: Install NGINX Ingress Controller
        run: |
          if ! kubectl get ns ingress-nginx >/dev/null 2>&1; then
            echo "Installing NGINX Ingress Controller..."
            kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
            echo "Waiting for Ingress controller LoadBalancer..."
            kubectl wait --namespace ingress-nginx \
              --for=condition=available --timeout=300s deployment/ingress-nginx-controller
          else
            echo "Ingress Controller already installed."
          fi

      # Replace image in deployment.yaml
      - name: Update deployment image
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          sed -i "s|image: .*|image: $ACCOUNT_ID.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ github.sha }}|" manifests/deployment.yml

      # Deploy Deployment & Service
      - name: Deploy Deployment & Service
        run: |
          kubectl apply -f manifests/deployment.yml
          kubectl apply -f manifests/service.yml

      # Deploy Ingress
      - name: Deploy Ingress
        run: kubectl apply -f manifests/ingress.yml

      # Optional: Get Ingress hostname
      - name: Get Ingress hostname
        run: |
          echo "Ingress hostname:"
          kubectl get ingress backend-ingress
